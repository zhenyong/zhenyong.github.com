pre, .errmsg, .doc code {
  font-family: "Roboto Mono", Menlo, monospace; }

pre.code {
  overflow-x: auto;
  display: block;
  font-size: 13px;
  margin: 20px 0;
  border-left: 4px solid #d68b00;
  padding: 5px 10px;
  box-sizing: border-box;
  border-radius: 0;
  background-color: rgba(226, 141, 49, 0.1); }

.doc {
  color: #336699;
  white-space: normal;
  font-family: Helvetica Neue, Georgia; }

.doc p {
  font-family: Georgia;
  line-height: 1.35em;
  letter-spacing: 0.01em; }

.doc code {
  font-size: 13px;
  background-color: rgba(40, 90, 120, 0.1);
  padding: 1px 2px;
  border-radius: 2px; }

.error {
  background: url("/assets/underline.png") bottom repeat-x;
  padding-bottom: 4px; }

.selected {
  background-color: rgba(255, 100, 100, 0.2); }

.main-selected {
  background-color: rgba(255, 100, 100, 0.6);
  border-bottom: none; }

.errmsg {
  position: absolute;
  max-width: 450px;
  font-size: 12px;
  padding: 7px 10px;
  border: 1px solid #d64400;
  background-color: #FAEBE6;
  /* hsla(8, 75%, 54%, 0.1) over white */ }

.type {
  opacity: 0.5; }

.hll {
  background-color: #ffffcc; }

.c {
  color: #999988;
  font-style: italic; }

/* Comment */
/* pygments uses .err, which we leave unstyled because pygments doesn't parse
   types, so there are lots of spurious "errors". */
.T_ERROR {
  color: #a61717;
  background-color: #e3d2d2; }

/* Error */
/* Keyword */
.T_ASYNC,
.T_AWAIT,
.T_BREAK,
.T_CASE,
.T_CATCH,
.T_CONTINUE,
.T_DEBUGGER,
.T_DECLARE,
.T_DEFAULT,
.T_DELETE,
.T_DO,
.T_ELSE,
.T_ENUM,
.T_EXPORT,
.T_EXTENDS,
.T_FINALLY,
.T_FOR,
.T_IF,
.T_IMPLEMENTS,
.T_IMPORT,
.T_IN,
.T_INSTANCEOF,
.T_INTERFACE,
.T_NEW,
.T_OF,
.T_PACKAGE,
.T_PRIVATE,
.T_PROTECTED,
.T_PUBLIC,
.T_RETURN,
.T_STATIC,
.T_SUPER,
.T_SWITCH,
.T_THIS,
.T_THROW,
.T_TRY,
.T_TYPE,
.T_TYPEOF,
.T_VOID,
.T_WHILE,
.T_WITH,
.T_YIELD,
.k {
  color: #000000;
  font-weight: bold; }

/* Operator */
.T_AND,
.T_ASSIGN,
.T_BIT_AND,
.T_BIT_AND_ASSIGN,
.T_BIT_NOT,
.T_BIT_OR,
.T_BIT_OR_ASSIGN,
.T_BIT_XOR,
.T_BIT_XOR_ASSIGN,
.T_COLON,
.T_DECR,
.T_DIV_ASSIGN,
.T_EQUAL,
.T_GREATER_THAN_EQUAL,
.T_INCR,
.T_LESS_THAN_EQUAL,
.T_LSHIFT,
.T_LSHIFT_ASSIGN,
.T_MINUS,
.T_MINUS_ASSIGN,
.T_MOD,
.T_MOD_ASSIGN,
.T_MULT,
.T_MULT_ASSIGN,
.T_NOT,
.T_NOT_EQUAL,
.T_OR,
.T_PLING,
.T_PLUS,
.T_PLUS_ASSIGN,
.T_RSHIFT,
.T_RSHIFT3,
.T_RSHIFT3_ASSIGN,
.T_RSHIFT_ASSIGN,
.T_STRICT_EQUAL,
.T_STRICT_NOT_EQUAL,
.T_DIV.normal,
.T_GREATER_THAN.normal,
.T_LESS_THAN.normal,
.o {
  color: #000000; }

.cp {
  color: #666666;
  font-weight: bold;
  font-style: italic; }

/* Comment.Preproc */
.c1 {
  color: #666666;
  font-weight: bold;
  font-style: italic; }

/* Comment.Single */
/* Comment.Multiline */
.comment,
.cm {
  color: #666666;
  font-style: italic; }

.cs {
  color: #666666;
  font-weight: bold;
  font-style: italic; }

/* Comment.Special */
.gd {
  color: #000000;
  background-color: #ffdddd; }

/* Generic.Deleted */
.ge {
  color: #000000;
  font-style: italic; }

/* Generic.Emph */
.gr {
  color: #aa0000; }

/* Generic.Error */
.gh {
  color: #999999; }

/* Generic.Heading */
.gi {
  color: #000000;
  background-color: #ddffdd; }

/* Generic.Inserted */
.go {
  color: #888888; }

/* Generic.Output */
.gp {
  color: #555555; }

/* Generic.Prompt */
.gs {
  font-weight: bold; }

/* Generic.Strong */
.gu {
  color: #aaaaaa; }

/* Generic.Subheading */
.gt {
  color: #aa0000; }

/* Generic.Traceback */
.kc {
  color: #000000;
  font-weight: bold; }

/* Keyword.Constant */
/* Keyword.Declaration */
.T_CLASS, .T_CONST, .T_FUNCTION, .T_LET, .T_VAR, .kd {
  color: #000000;
  font-weight: bold; }

.kn {
  color: #000000;
  font-weight: bold; }

/* Keyword.Namespace */
.kp {
  color: #000000;
  font-weight: bold; }

/* Keyword.Pseudo */
.kr {
  color: #000000;
  font-weight: bold; }

/* Keyword.Reserved */
/* Keyword.Type */
.T_ANY_TYPE,
.T_BOOLEAN_TYPE,
.T_NUMBER_TYPE,
.T_STRING_TYPE,
.T_VOID_TYPE,
.kt {
  color: #445588;
  font-weight: bold; }

.T_NUMBER, .m {
  color: #009999; }

/* Literal.Number */
.s {
  color: #d01040; }

/* Literal.String */
.na {
  color: #008080; }

/* Name.Attribute */
/* Name.Builtin */
/* Name.Class */
.T_IDENTIFIER.type,
.T_JSX_IDENTIFIER.type,
.nc {
  color: #445588;
  font-weight: bold; }

.no {
  color: #008080; }

/* Name.Constant */
.nd {
  color: #3c5d5d;
  font-weight: bold; }

/* Name.Decorator */
.ni {
  color: #800080; }

/* Name.Entity */
.ne {
  color: #990000;
  font-weight: bold; }

/* Name.Exception */
.nf {
  color: #990000;
  font-weight: bold; }

/* Name.Function */
.nl {
  color: #990000;
  font-weight: bold; }

/* Name.Label */
.nn {
  color: #555555; }

/* Name.Namespace */
.nt {
  color: #000080; }

/* Name.Tag */
/* Name.Variable */
.T_IDENTIFIER,
.T_JSX_IDENTIFIER,
.nv {
  color: #008080; }

.ow {
  color: #000000;
  font-weight: bold; }

/* Operator.Word */
.w {
  color: #bbbbbb; }

/* Text.Whitespace */
.mf {
  color: #009999; }

/* Literal.Number.Float */
.mh {
  color: #009999; }

/* Literal.Number.Hex */
.mi {
  color: #009999; }

/* Literal.Number.Integer */
.mo {
  color: #009999; }

/* Literal.Number.Oct */
.T_JSX_TEXT, .sb {
  color: #d01040; }

/* Literal.String.Backtick */
.sc {
  color: #d01040; }

/* Literal.String.Char */
.sd {
  color: #d01040; }

/* Literal.String.Doc */
.s2 {
  color: #d01040; }

/* Literal.String.Double */
.se {
  color: #d01040; }

/* Literal.String.Escape */
.sh {
  color: #d01040; }

/* Literal.String.Heredoc */
.si {
  color: #d01040; }

/* Literal.String.Interpol */
.sx {
  color: #d01040; }

/* Literal.String.Other */
.T_REGEXP, .sr {
  color: #009926; }

/* Literal.String.Regex */
.T_STRING, .T_TEMPLATE_PART, .s1 {
  color: #d01040; }

/* Literal.String.Single */
.ss {
  color: #990073; }

/* Literal.String.Symbol */
.bp {
  color: #999999; }

/* Name.Builtin.Pseudo */
.vc {
  color: #008080; }

/* Name.Variable.Class */
.vg {
  color: #008080; }

/* Name.Variable.Global */
.vi {
  color: #008080; }

/* Name.Variable.Instance */
.il {
  color: #009999; }

/* Literal.Number.Integer.Long */
/* Punctuation:

.T_ARROW,
.T_COMMA,
.T_ELLIPSIS,
.T_LBRACKET,
.T_LCURLY,
.T_LPAREN,
.T_PERIOD,
.T_RBRACKET,
.T_RCURLY,
.T_RPAREN,
.T_SEMICOLON */
